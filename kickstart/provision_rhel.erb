<%#
kind: provision
name: OSC - Kickstart RHEL default
oses:
- RedHat
- RHEL Server
- CentOS
%>
<%#
This template accepts the following parameters:
- kickstart_selinux: string (default="enforcing")
- epel_url_base: string (default=use epel mirror)
- http-proxy: string (default="")
- http-proxy-port: string (default="")
- force-puppet: boolean (default=false)
- enable-puppetlabs-repo: boolean (default=false)
- enable-puppetlabs-pc1-repo: boolean (default=false)
- salt_master: string (default=undef)
- ntp-server: string (default="0.fedora.pool.ntp.org")
- bootloader-append: string (default="nofb quiet splash=quiet")
- disable-firewall: boolean (default=false)
%>
<%
  os_major = @host.operatingsystem.major.to_i
  realm_compatible = os_major >= 7 ? true : false
  # safemode renderer does not support unary negation
  pm_set = @host.puppetmaster.empty? ? false : true
  proxy_uri = @host.params['http-proxy'] ? "http://#{@host.params['http-proxy']}:#{@host.params['http-proxy-port']}" : nil
  proxy_string = proxy_uri ? " --proxy=#{proxy_uri}" : ''
  puppet_enabled = pm_set || @host.param_true?('force-puppet')
  salt_enabled = @host.params['salt_master'] ? true : false
  chef_enabled = @host.respond_to?(:chef_proxy) && @host.chef_proxy
  section_end = os_major <= 5 ? '' : '%end'
%>
install
<%= @mediapath %><%= proxy_string %>
lang en_US.UTF-8
selinux --<%= @host.params['kickstart_selinux'] || 'enforcing' %>
keyboard us
skipx

<% subnet = @host.subnet -%>
<% if subnet.respond_to?(:dhcp_boot_mode?) -%>
<% dhcp = subnet.dhcp_boot_mode? && !@static && subnet.dhcp? -%>
<% else -%>
<% dhcp = !@static -%>
<% end -%>
<% 
provision_interface = @host.provision_interface
if provision_interface.type == 'Nic::Bond'
  bond_name = provision_interface.identifier
  slaves = provision_interface.attached_devices
  bondopts = provision_interface.bond_options.split(/\s/)
  bondopts << "mode=#{provision_interface.mode}"
  bondopts = bondopts.join(',')
  network_device = bond_name
  bond = "--bondslaves=#{slaves} --bondopts=#{bondopts}"
else
  network_device = @host.mac
  bond = ""
end
-%>

network --bootproto <%= dhcp ? 'dhcp' : "static --ip=#{@host.ip} --netmask=#{subnet.mask} --gateway=#{subnet.gateway} --nameserver=#{[subnet.dns_primary, subnet.dns_secondary].select(&:present?).join(',')}" %> --hostname <%= @host %><%= os_major >= 6 ? " --device=#{network_device}" : '' -%> <%= bond %>

rootpw --iscrypted <%= root_pass %>
<% if os_major >= 7 -%>
firewall --ssh
<% else -%>
firewall --disabled
<% end -%>
authconfig --useshadow --passalgo=sha512 --kickstart
timezone --utc America/New_York
<% if os_major > 4 -%>
services --disabled gpm,sendmail,cups,pcmcia,isdn,rawdevices,hpoj,bluetooth,openibd,avahi-daemon,avahi-dnsconfd,hidd,hplip,pcscd
<% end -%>

<% if ! @host.params['epel_url_base'].nil? -%>
repo --name="EPEL" --baseurl=<%= @host.params['epel_url_base'] %>/epel/<%= @host.operatingsystem.major %>/<%= @host.architecture %><%= proxy_string %>
<% else -%>
repo --name="EPEL" --mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-<%= @host.operatingsystem.major %>&arch=<%= @host.architecture %><%= proxy_string %>
<% end -%>
repo --name=puppetlabs-products --baseurl=http://yum.puppetlabs.com/el/<%= @host.operatingsystem.major %>/products/<%= @host.architecture %><%= proxy_string %>
repo --name=puppetlabs-deps --baseurl=http://yum.puppetlabs.com/el/<%= @host.operatingsystem.major %>/dependencies/<%= @host.architecture %><%= proxy_string %>

<% if os_major == 7 -%>
bootloader --location=mbr --driveorder=sda --append="<%= @host.params['bootloader-append'] || 'nofb quiet splash=quiet net.ifnames=0 biosdevname=0' %>" <%= grub_pass %>
<% else -%>
bootloader --location=mbr --driveorder=sda --append="<%= @host.params['bootloader-append'] || 'nofb quiet splash=quiet' %>" <%= grub_pass %>
<% end -%>
<% if os_major == 5 -%>
key --skip
<% end -%>

<% if @dynamic -%>
%include /tmp/diskpart.cfg
<% else -%>
<%= @host.diskLayout %>
<% end -%>

text
reboot

%packages
yum
dhclient
ntp
wget
@Core
epel-release
# WORKAROND: Use specific version as release 12 seems to not work
#puppetlabs-release-<%= @host.operatingsystem.major %>-11.noarch
puppet
<%= section_end -%>

<% if @dynamic -%>
%pre
<%= @host.diskLayout %>
<%= section_end -%>
<% end -%>

%post --nochroot
exec < /dev/tty3 > /dev/tty3
#changing to VT 3 so that we can see whats going on....
/usr/bin/chvt 3
(
cp -va /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
/usr/bin/chvt 1
) 2>&1 | tee /mnt/sysimage/root/install.postnochroot.log
<%= section_end -%>

%post
logger "Starting anaconda <%= @host %> postinstall"
exec < /dev/tty3 > /dev/tty3
#changing to VT 3 so that we can see whats going on....
/usr/bin/chvt 3
(
<% if subnet.respond_to?(:dhcp_boot_mode?) -%>
<%= snippet 'OSC-kickstart_networking_setup' %>
<% end -%>

# Update URLs used for repositories

<% if ! @host.params['epel_url_base'].nil? -%>
echo "Updating EPEL mirrorlist=absent and baseurl=<%= @host.params['epel_url_base'] %>/epel/<%= @host.operatingsystem.major %>/<%= @host.architecture %><%= proxy_string %>"
puppet resource yumrepo epel mirrorlist=absent baseurl=<%= @host.params['epel_url_base'] %>/epel/<%= @host.operatingsystem.major %>/<%= @host.architecture %><%= proxy_string %>
<% end -%>

#update local time
echo "updating system time"
/usr/sbin/ntpdate -sub <%= @host.params['ntp-server'] || '0.fedora.pool.ntp.org' %>
/usr/sbin/hwclock --systohc

<% if @host.operatingsystem.name != 'CentOS' -%>
<%= snippet 'OSC-redhat_register' %>
<% end -%>

<% if proxy_uri -%>
# Yum proxy
echo 'proxy = <%= proxy_uri %>' >> /etc/yum.conf
<% end -%>

# update all the base packages from the updates repository
<%- if @host.params['kickstart-yum-update'].present? && @host.param_true?('kickstart-yum-update') -%>
yum -t -y update
<%- end -%>

<% if provision_interface.type == 'Nic::Bond' -%>
# Remove bond#_slave_# interfaces as they cause problems after first boot
rm -f /etc/sysconfig/network-scripts/ifcfg-<%= bond_name %>_slave*
<% end -%>

<% if puppet_enabled %>
<%= snippet 'puppet_setup' %>
<% end -%>

sync

# Inform the build system that we are done.
echo "Informing Foreman that we are built"
wget -q -O /dev/null --no-check-certificate <%= foreman_url('built') %>
) 2>&1 | tee /root/install.post.log
exit 0

<%= section_end -%>
